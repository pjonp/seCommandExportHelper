{"version":3,"sources":["App.js","index.js"],"names":["App","props","state","inputText","updateText","bind","formatCommands","this","setState","onLoadMessage","event","target","value","commandText","trim","replace","split","map","i","temp","command","res","globalCD","userCD","cost","level","Fragment","key","id","className","onChange","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kOAGMA,G,wDACJ,WAAYC,GAAO,IAAD,8BAChB,cAAMA,IACDC,MAAQ,CACXC,UAAW,IAEb,EAAKC,WAAa,EAAKA,WAAWC,KAAhB,gBAClB,EAAKC,eAAiB,EAAKA,eAAeD,KAApB,gBANN,E,gEAUdE,KAAKC,SAAS,CAACL,UAAWM,M,iCAEnBC,GACTH,KAAKC,SAAS,CAACL,UAAWO,EAAMC,OAAOC,U,qCAE1BC,GAqBb,OAnBeA,EAAYC,OAAOC,QAAQ,MAAO,YAAYC,MAAM,4BAA4BC,KAAI,SAAAC,GACjG,IAAIC,EAAOD,EAAEF,MAAM,oBACnB,MAAO,CACLI,QAASD,EAAK,GAAGJ,QAAQ,IAAI,IAC7BM,IAAKF,EAAK,GACVG,SAAUH,EAAK,GACfI,OAAQJ,EAAK,GACbK,KAAML,EAAK,GACXM,MAAON,EAAK,OAGQF,KAAI,SAAAC,GAC1B,OACE,kBAAC,IAAMQ,SAAP,CAAgBC,IAAKT,EAAEE,SACvB,6BADA,IAEEF,EAAEE,QAFJ,MAEgBF,EAAEO,MAFlB,YAEkCP,EAAEG,IAFpC,MAE4CH,EAAEI,SAF9C,MAE2DJ,EAAEK,OAF7D,sB,+BASJ,OACA,yBAAKK,GAAG,iBAAiBC,UAAU,kBACnC,0BAAMD,GAAG,kBAAkBC,UAAU,mBACnC,yBAAKA,UAAU,2BACnB,8BAAUA,UAAU,eAAeD,GAAG,SAAShB,MAAOL,KAAKL,MAAMC,UAAW2B,SAAUvB,KAAKH,eAGnF,0BAAMwB,GAAG,mBAAmBC,UAAU,oBACxC,yBAAKD,GAAG,UAAUC,UAAU,gBAC1B,yBAAKD,GAAG,kBACR,sHACCrB,KAAKD,eAAeC,KAAKL,MAAMC,mB,GAnDxB4B,IAAMC,YA2DlBvB,EAAgB,yGAEPT,IC5DfiC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.ad071b3c.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      inputText: \"\"\n    }\n    this.updateText = this.updateText.bind(this)\n    this.formatCommands = this.formatCommands.bind(this)\n  };\n\n  componentDidMount() {\n      this.setState({inputText: onLoadMessage})\n  }\n  updateText(event) {\n    this.setState({inputText: event.target.value})\n    }\n  formatCommands(commandText) {\n    //secret = #(f3Z4a#\n    let buildObj = commandText.trim().replace(/\\n/g, '#(f3Z4a#').split('#(f3Z4a##(f3Z4a##(f3Z4a#').map(i => {\n      let temp = i.split('#(f3Z4a##(f3Z4a#')\n      return {\n        command: temp[0].replace('!',''),\n        res: temp[1],\n        globalCD: temp[2],\n        userCD: temp[3],\n        cost: temp[4],\n        level: temp[5]\n      };\n    });\n    let buildCSV = buildObj.map(i=> {\n      return (\n        <React.Fragment key={i.command}>\n        <br />\n        \"{i.command}\",\"{i.level}\",\"\",\"\",\"{i.res}\",\"{i.globalCD}\",\"{i.userCD}\",\"SC\",\"TRUE\"\n        </React.Fragment>\n      )\n    })\n    return buildCSV;\n  }\n  render(){\n    return(\n    <div id=\"main_container\" className=\"main_container\">\n    <span id=\"input_container\" className=\"input_container\">\n      <div className=\"form-group border-focus\">\n  <textarea className=\"form-control\" id=\"editor\" value={this.state.inputText} onChange={this.updateText}></textarea>\n</div>\n      </span>\n          <span id=\"output_container\" className=\"output_container\">\n        <div id='preview' className=\"form-control\">\n          <div id='previewContent'>\n          <>Command,Permission,PermInfo,Count,Response,Cooldown,UserCooldown,Usage,Enabled</>\n          {this.formatCommands(this.state.inputText)}\n          </div>\n        </div>\n        </span>\n    </div>\n    )}\n}\n\nconst onLoadMessage = \"Paste the Custom Commands From Here: https://streamelements.com/dashboard/bot-commands/custom-commands\"\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}